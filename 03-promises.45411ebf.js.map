{"version":3,"sources":["js/03-promises.js"],"names":["inputDelay","document","querySelector","inputStep","inputAmount","form","onSubmit","event","preventDefault","delay","parseInt","value","step","amount","delayCalc","i","createPromise","then","position","console","log","catch","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener"],"mappings":";AAEA,MAAOA,EAAaC,SAASC,cAAc,uBACrCC,EAAYF,SAASC,cAAc,sBAClCE,EAAcH,SAASC,cAAc,wBACtCG,EAAOJ,SAASC,cAAc,SAIpC,SAASI,EAASC,GAClBA,EAAMC,iBACAC,MAAAA,EAAQC,SAASV,EAAWW,OAC5BC,EAAOF,SAASP,EAAUQ,OAC1BE,EAASH,SAASN,EAAYO,OAChCG,IAAAA,EAAYL,EACX,IAAA,IAAIM,EAAE,EAAGA,GAAGF,EAAQE,GAAG,EAC1BC,EAAcD,EAAED,GACfG,KAAK,EAAGC,SAAAA,EAAUT,MAAAA,MACjBU,QAAQC,2BAA2BF,QAAeT,SAEnDY,MAAM,EAAGH,SAAAA,EAAUT,MAAAA,MAClBU,QAAQC,0BAA0BF,QAAeT,SAEnDK,GAAaF,EAGf,SAASI,EAAcE,EAAUT,GACzBa,MAAAA,EAAgBC,KAAKC,SAAW,GAE7B,OAAA,IAAIC,QAAQ,CAACC,EAAQC,KAC1BC,WAAW,KACLN,EACFI,EAAQ,CAACR,SAAAA,EAAUT,MAAAA,IAEjBkB,EAAO,CAACT,SAAAA,EAAUT,MAAAA,KACjBA,KA3BbJ,EAAKwB,iBAAiB,SAASvB","file":"03-promises.45411ebf.js","sourceRoot":"../src","sourcesContent":["\n\nconst  inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst  inputAmount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form')\n\n\nform.addEventListener('submit',onSubmit);\nfunction onSubmit(event) {\nevent.preventDefault();\nconst delay = parseInt(inputDelay.value);\nconst step = parseInt(inputStep.value);\nconst amount = parseInt(inputAmount.value);\nlet delayCalc = delay;\nfor (let i=1; i<=amount; i+=1){\n  createPromise(i,delayCalc)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayCalc += step;\n}\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve,reject)=>{\n      setTimeout(()=>{\n        if (shouldResolve){\n          resolve({position, delay})}\n          else{\n            reject({position, delay })\n          }},delay)\n\n    })\n  }\n    // Reject\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"]}